---
- name: "upload : calculate files to upload order to check that no files exist with overlapping names."
  set_fact:
    _jenkins_casc_found_config_files: "{{ _jenkins_casc_found_config_files | default([]) + [item] }}"
  with_fileglob: "{{ jenkins_casc_config_fileglobs }}"

- name: "upload : fail on overlapping file names."
  fail:
    msg:
      - "Found duplicate file(s) to deploy!"
      - "Please ensure that the filenames are unique, otherwise unexpected result may occur!"
      - "Complete file list: "
      - "{{ _jenkins_casc_found_config_files }}"
  when: _jenkins_casc_found_config_files | default({}) | map('basename') | list !=
        _jenkins_casc_found_config_files | default({}) | map('basename') | list | unique

- name: "upload : create configuration dir."
  file:
    path: "{{ jenkins_casc_config_path }}"
    state: directory
    owner: "{{ jenkins_casc_owner }}"
    group: "{{ jenkins_casc_group }}"
    mode: 0770

- name: "upload : upload files/templates."
  template:
    src: "{{ item }}"
    owner: "{{ jenkins_casc_owner }}"
    group: "{{ jenkins_casc_group }}"
    dest: "{{ jenkins_casc_config_path }}"
    mode: 0440
  with_fileglob: "{{ jenkins_casc_config_fileglobs }}"
  register: _jenkins_casc_upload_files_result

- name: "upload : unmanaged."
  block:
    - name: "upload : unmanaged : find files in {{ jenkins_casc_config_path }}."
      find:
        paths: "{{ jenkins_casc_config_path }}"
      register: _jenkins_casc_config_existing_files

    - name: "upload : unmanaged : delete unmanaged files."
      file:
        path: "{{ item }}"
        state: absent
        # build list of uploaded and found file paths and delete the difference
      with_items: "{{ _jenkins_casc_config_existing_files.files | map(attribute='path') | list
                      | difference(_jenkins_casc_upload_files_result.results | map(attribute='dest') | list) }}"
      register: _jenkins_casc_unmanaged_result

  when:
    - _jenkins_casc_upload_files_result.results | length > 0
    - jenkins_casc_config_unmanaged_delete
